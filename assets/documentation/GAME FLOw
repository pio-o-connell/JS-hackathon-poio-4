


 the shared global object is essentially the bridge between quiz.js (engine) and script.js (UI). In the code, this is exposed as
  globally accessible instance of QuizEngine that both quiz.js (the engine) and script.js (the UI) use to share state, data, and functions.
 Defined in quiz.js as a singleton instance of QuizEngine.

 Attached to window so itâ€™s globally accessible by any other script, including script.js.


 ðŸ”¹ Summary Table
Event Name	Dispatched by	Listened by	Purpose
quiz:ready	quiz.js	script.js	Countries loaded, UI can enable interactions
quiz:answered	quiz.js	script.js	Answer checked, update feedback & score
quiz:finished	quiz.js	script.js	All questions done, show final summary

Essentially, script.js reacts to these events to control DOM updates and quiz flow, while quiz.js generates data and manages the game logic.

ðŸ§  Example Flow
script.js 
==============
Page Load
â”‚
â”œâ”€â”€ cache DOM elements
â”œâ”€â”€ set up listeners
â”‚
â””â”€â”€ Wait for quiz engine ready
     â”‚
     â”œâ”€â”€ Click Quiz Type â†’ runGame()
     â”œâ”€â”€ Click Country â†’ handleCountrySelection()
     â”œâ”€â”€ Click Start â†’ beginQuiz()
     â”‚
     â”œâ”€â”€ Generate questions â†’ renderQuestion()
     â”œâ”€â”€ Click Answer â†’ handleAnswerSelection()
     â”œâ”€â”€ Next â†’ handleNextQuestion()
     â””â”€â”€ Finish â†’ finalizeQuiz()


Quiz.js Page Load
â”‚
â”œâ”€â”€ Create QuizEngine instance
â”œâ”€â”€ Initialize variables (countries[], score, currentQuestion, streak, etc.)
â”œâ”€â”€ init() â†’ fetch country data from REST API
â”‚
â””â”€â”€ Dispatch "quiz:ready" event
     â”‚
     â”œâ”€â”€ generateQuestionSet(gameType, numQuestions)
     â”‚     â”œâ”€â”€ Pick random countries from countries[]
     â”‚     â”œâ”€â”€ Build questions (options + correctIndex)
     â”‚     â””â”€â”€ Return array of question objects
     â”‚
     â”œâ”€â”€ nextQuestion()
     â”‚     â”œâ”€â”€ Select next question from generated set
     â”‚     â””â”€â”€ Return question object for UI
     â”‚
     â”œâ”€â”€ checkAnswer(selectedIndex)
     â”‚     â”œâ”€â”€ Compare selectedIndex with correctIndex
     â”‚     â”œâ”€â”€ Update score / wrong / streak
     â”‚     â””â”€â”€ Return true/false
     â”‚
     â”œâ”€â”€ resetGame()
     â”‚     â”œâ”€â”€ Reset score, wrong, streak
     â”‚     â””â”€â”€ Clear currentQuestion
     â”‚
     â””â”€â”€ (Optional) Dispatch events:
           â”œâ”€â”€ "quiz:answered" â†’ after checkAnswer
           â””â”€â”€ "quiz:finished" â†’ after all questions answered


